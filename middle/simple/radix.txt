LI 0, 128
SLL 0, 5
LI 1, 1 #just the value 1
LI 3, 1 #1 to be compared to and shifted
LI 2, 128 #memory address
SLL 2, 4
LI 5, 0 #the count of zero (1's place)
LI 6, 128 #the location where 0 will be inserted
SLL 2, 5
LD 4, 0(2) #looks at value of the address
AND 4, 3 # if the value is zero, it will return zero. if the value is 1, it will return 1.
BNE 1 # the following will be skipped if the answer is 1
ADD 5, 1 # will execute if the answer is 0 #what should happen if the answer is 1? nothing?
ADD 2, 1 # increases the read address by 1
CMP 0, 2
BNE -6 
LI 2, 128 #memory address
SLL 2, 4
ADD 5, 6 #sets the 1's place
LD 4, 0(2) #looks at value of the memory address
AND 4, 3 # if the value is zero, it will return zero. if the value is 1, it will return 1.
LD 7, 0(2) #takes the value to be stored
BNE 2 # the following will be skipped if the answer is 1
ST 7, 0(6) #will execute if the answer is 0
ADD 6, 1 #increases the memory address of 0's place by 1
B 2 # will be skipped if the answer is 0
ST 7, 0(5) #will execute if the answer is 1
ADD 5, 1 #increases 1's place by 1
ADD 2, 1 # increases the read address's place by 1
CMP 0, 2
BNE -11 
SLL 3, 1 #shifts the bit to be compared to
LD 4, 0(2)
ADD 2, 1
LI 7, 128
SLL 7, 4
ST 4, 0(7)
ADD 7, 1
AND 3, 3
BLT 2
CMP 0, 7
BNE -37
HLT
